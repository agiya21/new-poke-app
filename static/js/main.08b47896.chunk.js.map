{"version":3,"sources":["components/Header.js","components/Lists.js","components/PokemonList.js","components/MyLists.js","components/MyPokemonList.js","components/CatchPokemon.js","components/CustomToggle.js","components/PokemonDetailMoves.js","components/PokemonDetailPics.js","components/PokemonDetailTypes.js","components/PokemonDetail.js","components/NavBarFooter.js","img/pokeball.png","App.js","index.js"],"names":["Header","Lists","props","listName","details","length","map","pokes","name","linkUrl","css","to","Button","PokemonList","state","loading","pokemon","pokeDetails","this","setState","fetch","then","response","json","data","results","url","temp","push","React","Component","MyLists","pokeNicks","nickname","nick","pokenick","sessionStorage","getItem","MyPokemonList","openAlert","isAlertOpen","closeAlert","isLoading","nameList","nickList","Object","keys","values","names","CatchPokemon","openModal","isOpen","closeModal","handleSubmit","bind","e","preventDefault","nicks","target","pokeNames","console","log","value","setItem","pokeName","catchPercentage","catchPercent","variant","onClick","Modal","show","onHide","Form","onSubmit","ModalHeader","closeButton","ModalTitle","ModalBody","Group","Label","Control","type","placeholder","required","ModalFooter","CustomToggle","children","eventKey","decoratedOnClick","useAccordionToggle","PokemonDetailMoves","pokeMoves","moves","Accordion","Card","Collapse","Body","move","PokemonDetailPics","pokePics","pics","src","front_default","alt","back_default","PokemonDetailTypes","pokeTypes","types","PokemonDetail","pokemonDetails","match","params","res","Math","floor","random","sprites","weight","NavBarFooter","Navbar","fixed","className","Nav","Item","App","backgroundColor","pokeball","basename","window","location","pathname","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08b47896.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <nav>\r\n                <ul>\r\n                    <li><Link to=\"/\">Pokemon List</Link></li>\r\n                    <li><Link to=\"/MyPokemonList\">My Pokemon List</Link></li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\n\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nfunction Lists(props) {\r\n    const listName = props.details\r\n    return (\r\n        <div>\r\n            <p>Content #3</p>\r\n            {\r\n                listName.length > 0 ? listName.map(pokes => {\r\n                    const { name } = pokes\r\n                    let linkUrl = \"/PokemonDetail/\" + name\r\n                    return (\r\n                        <div css={css` text-align : center`}>\r\n                            <Link to={linkUrl}>\r\n                                <Button><h3 css={css`text-transform : capitalized`}>{name}</h3></Button>\r\n                            </Link>\r\n                            <br></br>\r\n                            <br></br>\r\n                        </div>\r\n                    )\r\n                }) : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lists","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\n\r\nimport React from \"react\"\r\nimport Lists from \"./Lists\"\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nclass PokemonList extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: false,\r\n            pokemon: [],\r\n            pokeDetails: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true })\r\n        fetch(\"https://pokeapi.co/api/v2/pokemon\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    loading: false,\r\n                    pokemon: data.results\r\n                }, () => {\r\n                    // Mapping pokemon results to get API url\r\n                    this.state.pokemon.map(pokes => {\r\n                        fetch(pokes.url)\r\n                            .then(response => response.json())\r\n                            .then(data => {\r\n                                // Push pokemon details to temporary variable\r\n                                let temp = this.state.pokeDetails\r\n                                temp.push(data)\r\n                                // Set state pokeDetails content with temp variable\r\n                                this.setState({ pokeDetails: temp })\r\n                            })\r\n                    })\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { pokeDetails } = this.state\r\n        return (\r\n            <div>\r\n                <h2 css={css`text-align : center`}>Choose Your Pokemon!</h2>\r\n                <div css={css`\r\n                    text-align : center;\r\n                    padding-top : 25px; \r\n                    background-color : white;\r\n                    border : none;\r\n                    border-radius : 15px`}>\r\n                    <p>Content #2</p>\r\n                    {this.state.loading === true && <h2>Loading...</h2>}\r\n                    <Lists details={pokeDetails} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonList","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Button from \"react-bootstrap/Button\"\r\n\r\nfunction MyLists(props) {\r\n    const pokeNicks = props.nickname\r\n\r\n    // Fix this for deleting pokemon\r\n    const pokeRelease = (release) => {\r\n        sessionStorage.removeItem(release)\r\n    }\r\n\r\n    const nick = pokeNicks.length > 0 ? pokeNicks.map(pokenick => {\r\n        let linkUrl = \"/PokemonDetail/\" + sessionStorage.getItem(pokenick)\r\n        return (\r\n            <div>\r\n                <Link to={linkUrl}>\r\n                    <li><h3>{pokenick}</h3></li>\r\n                </Link>\r\n                <h4>Species : {sessionStorage.getItem(pokenick)}</h4>\r\n            </div>\r\n        )\r\n    }) : null\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {nick}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyLists","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\n\r\nimport React from \"react\"\r\nimport MyLists from \"./MyLists\"\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nclass MyPokemonList extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isLoading: false,\r\n            nameList: [],\r\n            nickList: [], \r\n            isAlertOpen : true\r\n        }\r\n    }\r\n\r\n    openAlert = () => this.setState({ isAlertOpen: true })\r\n    closeAlert = () => this.setState({ isAlertOpen: false })\r\n\r\n    // Put all sessionStorage cache to nameList\r\n    componentDidMount() {\r\n        this.setState({\r\n            nickList: Object.keys(sessionStorage),\r\n            nameList: Object.values(sessionStorage)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div css={css`text-align : center`}>\r\n                <h3>My Pokemon List</h3>\r\n                <MyLists nickname={this.state.nickList} names={this.state.nameList} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyPokemonList","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\n\r\n\r\nimport React from \"react\"\r\nimport Button from 'react-bootstrap/Button'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport ModalHeader from 'react-bootstrap/ModalHeader'\r\nimport ModalTitle from 'react-bootstrap/ModalTitle'\r\nimport ModalBody from 'react-bootstrap/ModalBody'\r\nimport ModalFooter from 'react-bootstrap/ModalFooter'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nclass CatchPokemon extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isOpen: false,\r\n            isAlertOpen: true\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    openModal = () => this.setState({ isOpen: true })\r\n    closeModal = () => this.setState({ isOpen: false })\r\n\r\n    openAlert = () => this.setState({ isAlertOpen: true })\r\n    closeAlert = () => this.setState({ isAlertOpen: false })\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        // get form input value\r\n        const { nicks } = e.target\r\n        const pokeNames = this.props.name\r\n\r\n        // compare if there is a same name in sessionStorage\r\n        // if none, add name to sessionStorage\r\n        console.log(pokeNames)\r\n        let keys = Object.keys(sessionStorage)\r\n\r\n        if (keys.length > 0) {\r\n            for (let key of keys) {\r\n                if (key === nicks.value) {\r\n                    console.log(\"same name in object keys\")\r\n                } else {\r\n                    sessionStorage.setItem(nicks.value, pokeNames)\r\n                }\r\n            }\r\n        } else {\r\n            sessionStorage.setItem(nicks.value, pokeNames)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const pokeName = this.props.name\r\n        const catchPercentage = this.props.catchPercent\r\n        return (\r\n            <div>\r\n                <Button css={css`border-radius : 18px`} variant=\"primary\" onClick={this.openModal}>Catch the pokemon</Button>\r\n                {\r\n                    this.state.isOpen && catchPercentage > 50 ?\r\n                        <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <ModalHeader closeButton>\r\n                                    <ModalTitle>Catch Successful! Give a nickname to your {pokeName}</ModalTitle>\r\n                                </ModalHeader>\r\n                                <ModalBody>\r\n                                    <Form.Group>\r\n                                        <Form.Label>Nickname</Form.Label>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            name=\"nicks\"\r\n                                            placeholder=\"You can name it like Marco, Foobar, etc.\"\r\n                                            required\r\n                                        />\r\n                                    </Form.Group>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button type=\"submit\">Add to My Pokemon List</Button>\r\n                                </ModalFooter>\r\n                            </Form>\r\n                        </Modal>\r\n                        :\r\n                        <Modal show={this.state.isOpen} onHide={this.closeModal}>\r\n                            <ModalHeader>\r\n                                <ModalTitle>Sorry...</ModalTitle>\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <p>You failed to catch the pokemon</p>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <Button variant=\"primary\" onClick={this.closeModal} >Close</Button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CatchPokemon","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\n//import React from \"react\"\r\nimport { useAccordionToggle } from 'react-bootstrap/AccordionToggle'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\n\r\nfunction CustomToggle({ children, eventKey }) {\r\n    const decoratedOnClick = useAccordionToggle(eventKey, () =>\r\n        console.log('totally custom!'),\r\n    );\r\n\r\n    return (\r\n        <Button css={css`\r\n            background-color: blueviolet;\r\n            border: none;\r\n            border-radius: 18px;`}\r\n            onClick={decoratedOnClick}>\r\n            {children}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default CustomToggle","import React from \"react\"\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport CustomToggle from './CustomToggle'\r\n\r\nfunction PokemonDetailMoves(props) {\r\n    const pokeMoves = props.moves\r\n\r\n    return (\r\n        <div>\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <CustomToggle eventKey=\"0\">\r\n                            Pokemon Moves\r\n                        </CustomToggle>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                            <Card.Body>\r\n                                {\r\n                                    pokeMoves ? pokeMoves.map(data => {\r\n                                        const { move } = data\r\n                                        return (\r\n                                            <li>{move.name}</li>\r\n                                        )\r\n                                    }) : null\r\n                                }\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card.Header>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonDetailMoves","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\n\r\nimport React from \"react\"\r\nimport { css, jsx } from '@emotion/react'\r\nfunction PokemonDetailPics(props) {\r\n    const pokePics = props.pics\r\n\r\n    return (\r\n        <div css={css`\r\n            padding-top : 12px; \r\n            padding-bottom : 12px;\r\n            background-color : teal`}>\r\n\r\n            {pokePics ? <img src={pokePics.front_default} alt=\"pokePicsFront\" /> : null}\r\n            {pokePics ? <img src={pokePics.back_default} alt=\"pokePicsBack\" /> : null}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonDetailPics","import React from \"react\"\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport CustomToggle from \"./CustomToggle\"\r\n\r\nfunction PokemonDetailTypes(props) {\r\n\r\n    const pokeTypes = props.types\r\n\r\n    return (\r\n        <div>\r\n            <Accordion>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <CustomToggle eventKey=\"0\">\r\n                            Pokemon Types\r\n                        </CustomToggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            <ul>\r\n                                {\r\n                                    pokeTypes ? pokeTypes.map(data => {\r\n                                        const { type } = data\r\n                                        return (\r\n                                            <li>{type.name}</li>\r\n                                        )\r\n                                    }) : null\r\n                                }\r\n                            </ul>\r\n                        </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokemonDetailTypes","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\nimport React from \"react\"\r\nimport CatchPokemon from \"./CatchPokemon\"\r\nimport PokemonDetailMoves from \"./PokemonDetailMoves\"\r\nimport PokemonDetailPics from \"./PokemonDetailPics\"\r\nimport PokemonDetailTypes from \"./PokemonDetailTypes\"\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nclass PokemonDetail extends React.Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            loading: false,\r\n            pokemonDetails: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const pokeName = this.props.match.params.name\r\n        const linkUrl = \"https://pokeapi.co/api/v2/pokemon/\" + pokeName\r\n        this.setState({ loading: true })\r\n        fetch(linkUrl)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    loading: false,\r\n                    pokemonDetails: data\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { pokemonDetails } = this.state\r\n\r\n        // Generate catch pokemon percentage\r\n        const catchPercentage = Math.floor(Math.random() * 100)\r\n\r\n        return (\r\n            <div css={css`text-align : center`}>\r\n                {this.state.loading === true && <h2>Loading...</h2>}\r\n                {/** Rendering Pokemon Pics. Front and Back. */}\r\n                <PokemonDetailPics pics={pokemonDetails.sprites} />\r\n\r\n                <div css={css`text-transform: capitalize`}>\r\n                    <h2>{pokemonDetails.name}</h2>\r\n                </div>\r\n                <p>Weight : {pokemonDetails.weight}</p>\r\n\r\n                {/** Rendering Pokemon Types and Moves */}\r\n                <PokemonDetailTypes types={pokemonDetails.types} />\r\n                <PokemonDetailMoves moves={pokemonDetails.moves} />\r\n\r\n                {this.state.loading === true ? <h3>Loading...</h3> : <h3> Catch success percentage : {catchPercentage} % </h3>}\r\n\r\n                {/** Rendering Catch button */}\r\n                <CatchPokemon name={pokemonDetails.name} catchPercent={catchPercentage} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PokemonDetail","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\n\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { css, jsx } from '@emotion/react'\r\n\r\nfunction NavBarFooter() {\r\n    return (\r\n        <footer>\r\n            <Navbar css={css`background-color : white`} fixed=\"bottom\" className=\"justify-content-center\">\r\n                <Nav>\r\n                    <Nav.Item css={css`\r\n                        padding : 10px`}>\r\n                        <Link to=\"/\"><b>Pokemon List</b></Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item css={css`\r\n                        padding : 10px`}>\r\n                        <Link to=\"/MyPokemonList\"><b>My Pokemon List</b></Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n            </Navbar>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default NavBarFooter","export default __webpack_public_path__ + \"static/media/pokeball.dec3b7c9.png\";","/** @jsxRuntime classic /\r\n/* @jsx jsx */\r\n\r\nimport React from \"react\"\r\nimport Header from \"./components/Header\"\r\nimport PokemonList from \"./components/PokemonList\"\r\nimport MyPokemonList from \"./components/MyPokemonList\"\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\r\nimport PokemonDetail from \"./components/PokemonDetail\"\r\nimport { css, jsx } from '@emotion/react'\r\nimport NavBarFooter from \"./components/NavBarFooter\"\r\nimport pokeball from './img/pokeball.png'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div css={{\r\n      backgroundColor: \"#1FAA59\"\r\n    }}>\r\n\r\n      <div>\r\n        <h1 css={css`\r\n        padding : 12px;\r\n        text-align : center;\r\n        color : white`}>\r\n\r\n          <img css={css` width : 50px; \r\n          padding-bottom : 10px; \r\n          padding-right : 5px;\r\n          filter : invert(100%)`} src={pokeball} alt=\"Pokeball\" />Pokemon App</h1>\r\n      </div>\r\n\r\n      <Router basename={window.location.pathname || ''}>\r\n        <main css={css`\r\n          padding-bottom : 45px`}>\r\n            <p>Contents</p>\r\n          <Route exact path=\"/\">\r\n            <PokemonList />\r\n          </Route>\r\n\r\n          <Route path=\"/MyPokemonList\">\r\n            <MyPokemonList />\r\n          </Route>\r\n\r\n          <Route path=\"/PokemonDetail/:name\" component={PokemonDetail} />\r\n        </main>\r\n        <NavBarFooter />\r\n      </Router>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))"],"sourceRoot":""}